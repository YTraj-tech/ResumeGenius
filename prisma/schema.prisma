generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  clerkId   String   @unique
  email     String   @unique
  mobile         String? // New field - optional
  name      String?
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  resumes   Resume?
  personalInfo PersonalInfo?

}

model Resume {
  id             String   @id @default(uuid())
  userId         String   @unique
  name           String
  summary        String
  skills         String[]
  certifications String[]
  projects       Json
  experience     String[]
  education      String[]
  templateType   String   @default("technical")

  githubLink     String?
  linkedinLink   String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  user           User            @relation(fields: [userId], references: [id])
  customSections CustomSection[]
}

model CustomSection {
  id           String      @id @default(uuid())
  resumeId     String
  sectionType  SectionType // Title from 4 options
  organization String // Organization name
  description  String // Description

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  resume Resume @relation(fields: [resumeId], references: [id], onDelete: Cascade)
}

enum SectionType {
  INTERNSHIP
  ACHIEVEMENT
  AWARD
  PUBLICATION
}

model PersonalInfo {
  id        String   @id @default(uuid())
  userId    String   @unique
  phone     String?
  imageUrl  String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}
